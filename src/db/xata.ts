// Generated by Xata Codegen 0.28.3. Please do not edit.
import { buildClient } from "npm:@xata.io/client@latest";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "npm:@xata.io/client@latest";

const tables = [
  {
    name: "podcast",
    columns: [
      { name: "title", type: "string", notNull: true, defaultValue: "title" },
      {
        name: "podcastGuid",
        type: "string",
        notNull: true,
        defaultValue: "guid",
      },
      { name: "link", type: "text" },
      { name: "originalUrl", type: "text" },
      { name: "description", type: "text" },
      { name: "author", type: "string" },
      { name: "ownerName", type: "string" },
      { name: "imageUrl", type: "text" },
      { name: "imageBlur", type: "text" },
      {
        name: "contentType",
        type: "string",
        notNull: true,
        defaultValue: "application/json",
      },
      { name: "itunesId", type: "string" },
      { name: "itunesType", type: "string" },
      { name: "generator", type: "string" },
      { name: "language", type: "string", notNull: true, defaultValue: "en" },
      { name: "explicit", type: "bool", notNull: true, defaultValue: "false" },
      {
        name: "newestItemPublishTime",
        type: "int",
        notNull: true,
        defaultValue: "0",
      },
      {
        name: "oldestItemPublishTime",
        type: "int",
        notNull: true,
        defaultValue: "0",
      },
      {
        name: "url",
        type: "text",
        notNull: true,
        defaultValue: "http://localhost:8000",
      },
      { name: "tags", type: "link", link: { table: "category" } },
    ],
  },
  {
    name: "category",
    columns: [
      { name: "title", type: "string", notNull: true, defaultValue: "title" },
    ],
    revLinks: [{ column: "tags", table: "podcast" }],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Podcast = InferredTypes["podcast"];
export type PodcastRecord = Podcast & XataRecord;

export type Category = InferredTypes["category"];
export type CategoryRecord = Category & XataRecord;

export type DatabaseSchema = {
  podcast: PodcastRecord;
  category: CategoryRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Rifki-Ramadhan-s-workspace-6jdd8b.us-east-1.xata.sh/db/podcastlife",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
