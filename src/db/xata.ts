// Generated by Xata Codegen 0.28.3. Please do not edit.
import { buildClient } from "npm:@xata.io/client@latest";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "npm:@xata.io/client@latest";

const tables = [
  {
    name: "child_category",
    columns: [
      { name: "title", type: "string", notNull: true, defaultValue: "" },
      { name: "parent", type: "link", link: { table: "categories" } },
    ],
  },
  {
    name: "categories",
    columns: [
      { name: "title", type: "string", notNull: true, defaultValue: "" },
    ],
    revLinks: [
      { column: "parent", table: "child_category" },
      { column: "category", table: "category_podcast" },
    ],
  },
  {
    name: "podcasts",
    columns: [
      { name: "title", type: "string", notNull: true, defaultValue: "" },
      { name: "url", type: "string", unique: true },
      { name: "link", type: "string" },
      {
        name: "originalUrl",
        type: "string",
        notNull: true,
        defaultValue: "",
      },
      { name: "description", type: "text" },
      {
        name: "language",
        type: "string",
        notNull: true,
        defaultValue: "",
      },
      { name: "image", type: "text" },
      { name: "podcastGuid", type: "string" },
      { name: "itunesId", type: "int" },
      { name: "itunesType", type: "string" },
      {
        name: "explicit",
        type: "bool",
        notNull: true,
        defaultValue: "false",
      },
      { name: "author", type: "text" },
      { name: "owner", type: "text" },
      {
        name: "newestItemPubdate",
        type: "int",
        notNull: true,
        defaultValue: "0",
      },
      { name: "tags", type: "multiple" },
      {
        name: "oldestItemPubdate",
        type: "int",
        notNull: true,
        defaultValue: "0",
      },
    ],
    revLinks: [{ column: "podcast", table: "category_podcast" }],
  },
  {
    name: "category_podcast",
    columns: [
      { name: "category", type: "link", link: { table: "categories" } },
      { name: "podcast", type: "link", link: { table: "podcasts" } },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type ChildCategory = InferredTypes["child_category"];
export type ChildCategoryRecord = ChildCategory & XataRecord;

export type Categories = InferredTypes["categories"];
export type CategoriesRecord = Categories & XataRecord;

export type Podcasts = InferredTypes["podcasts"];
export type PodcastsRecord = Podcasts & XataRecord;

export type CategoryPodcast = InferredTypes["category_podcast"];
export type CategoryPodcastRecord = CategoryPodcast & XataRecord;

export type DatabaseSchema = {
  child_category: ChildCategoryRecord;
  categories: CategoriesRecord;
  podcasts: PodcastsRecord;
  category_podcast: CategoryPodcastRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Rifki-Ramadhan-s-workspace-6jdd8b.us-east-1.xata.sh/db/podcastlife",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
